/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package hair;

import java.awt.Component;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;



/**
 *
 * @author 555
 */
public class Orders extends javax.swing.JFrame {
    double total=0.0;
    double total2=0.0;
    int select;
 

    
    public Orders() {
        initComponents();
        
            
        Calendar C = Calendar.getInstance();
        SimpleDateFormat df = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
        String currentDate = df.format(C.getTime());
        datetime.setText(currentDate);
    
        
        DefaultTableModel model = (DefaultTableModel)tb_order.getModel();
        model.addColumn("ProductID");
        model.addColumn("Color");
        model.addColumn("Price");
        model.addColumn("Qty");
        model.addColumn("Total");
        model.addColumn("VAT");
        model.addColumn("TotalVat");
        
        


      
   
    }


   /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tb_order = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        orderprice = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        orderqty = new javax.swing.JTextField();
        orderadd = new javax.swing.JButton();
        orderedit = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        ordercolor = new javax.swing.JTextField();
        orderid = new javax.swing.JTextField();
        search = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        ordertotalvat = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        cus_id = new javax.swing.JTextField();
        searchcusid = new javax.swing.JButton();
        labelid = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        datetime = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        lb_order = new javax.swing.JLabel();
        finish = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        ordervat = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        ordertotal = new javax.swing.JLabel();
        orderdelete = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        orderpaid = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        change = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu2 = new javax.swing.JMenu();
        Choose = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Order");

        tb_order.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tb_order.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tb_orderMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tb_order);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("ProductID : ");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Price : ");

        orderprice.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        orderprice.setEnabled(false);

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("Qty : ");

        orderqty.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        orderqty.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                orderqtyActionPerformed(evt);
            }
        });

        orderadd.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        orderadd.setText("Add");
        orderadd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                orderaddActionPerformed(evt);
            }
        });

        orderedit.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        orderedit.setText("Edit");
        orderedit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ordereditActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setText("Color : ");

        ordercolor.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        ordercolor.setEnabled(false);
        ordercolor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ordercolorActionPerformed(evt);
            }
        });

        orderid.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        orderid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                orderidActionPerformed(evt);
            }
        });

        search.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        search.setText("Search");
        search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("TotalVat : ");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel6.setText("RumRuay Beauty");

        ordertotalvat.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        ordertotalvat.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel7.setText("CustomerID : ");

        cus_id.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        searchcusid.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        searchcusid.setText("Search");
        searchcusid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchcusidActionPerformed(evt);
            }
        });

        labelid.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        labelid.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel8.setText("Date : ");

        datetime.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel9.setText("OrderID : ");

        lb_order.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lb_order.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                lb_orderAncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });

        finish.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        finish.setText("Save");
        finish.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                finishActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel10.setText("Vat : ");

        ordervat.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        ordervat.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);

        jLabel11.setText("Total : ");

        ordertotal.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        ordertotal.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);

        orderdelete.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        orderdelete.setText("Delete");
        orderdelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                orderdeleteActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton2.setText("Clear");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        orderpaid.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        orderpaid.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        orderpaid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                orderpaidActionPerformed(evt);
            }
        });

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel14.setText("Paid : ");

        change.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        change.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jButton1.setText("OK");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jMenuBar1.setBorder(null);

        jMenu2.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jMenu2.setText("File");
        jMenu2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jMenu2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenu2ActionPerformed(evt);
            }
        });

        Choose.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        Choose.setText("Login/Logout");
        Choose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ChooseActionPerformed(evt);
            }
        });
        jMenu2.add(Choose);

        jMenuItem4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jMenuItem4.setText("Customer");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem4);

        jMenuItem1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jMenuItem1.setText("Product");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem1);

        jMenuItem2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jMenuItem2.setText("Insert Product");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem2);

        jMenuItem3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jMenuItem3.setText("บันทึกการขาย");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem3);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(76, 76, 76)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel5)
                                            .addComponent(jLabel3)
                                            .addComponent(jLabel2))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(ordercolor, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(orderprice, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(orderqty, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addGap(15, 15, 15)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(orderadd)
                                            .addComponent(jButton2))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(orderedit)
                                            .addComponent(orderdelete))
                                        .addGap(39, 39, 39))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 66, Short.MAX_VALUE)
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(orderid, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(search)))
                        .addGap(38, 38, 38))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(98, 98, 98)
                        .addComponent(jLabel6))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(labelid, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cus_id, javax.swing.GroupLayout.DEFAULT_SIZE, 103, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(searchcusid)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel9)
                                    .addComponent(jLabel8))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(datetime, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lb_order, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 419, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(24, 24, 24))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel10)
                            .addComponent(jLabel11)
                            .addComponent(jLabel4)
                            .addComponent(jLabel14))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(ordervat, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(ordertotal, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(ordertotalvat, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(orderpaid, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(change, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jButton1)
                                    .addComponent(finish, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(45, 45, 45))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(lb_order, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(datetime, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel11)
                            .addComponent(ordertotal, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10)
                            .addComponent(ordervat, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(ordertotalvat, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(orderpaid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel14)
                            .addComponent(jButton1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(change, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(finish)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(cus_id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(searchcusid))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(labelid, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(orderid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(search))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(ordercolor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(orderprice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(orderqty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(orderadd)
                            .addComponent(orderedit))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(orderdelete)
                            .addComponent(jButton2))))
                .addContainerGap(24, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ordercolorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ordercolorActionPerformed

    }//GEN-LAST:event_ordercolorActionPerformed

    private void orderidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_orderidActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_orderidActionPerformed

    private void searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchActionPerformed
//        DefaultTableModel model = (DefaultTableModel) tb_order.getModel();
//        double total;
//        int index = tb_order.getSelectedRow();
//        String order = orderid.getSelectedText().toString();
        String order = orderid.getText().toString();
        Connection connect =null;
        Statement s =null;
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            connect = DriverManager.getConnection("jdbc:sqlserver://localhost;databaseName=RumRuay_Beauty;user=sa;password=19082012");
            s = connect.createStatement();
            String sql ="SELECT ProductID,Color,Price1 FROM Product "
                    + "WHERE ProductID = '"+order+"'";
            ResultSet result = s.executeQuery(sql);
            int row = 0;
            while((result.next()))
            {
                String orderid = result.getString("ProductID");
//                ordercolor.setText(result.getString("Color"));
//                orderprice.setText(result.getString("Price1"));
                 String color = result.getString("Color");
                String price = result.getString("Price1");
                ordercolor.setText(color);
                orderprice.setText(price);
                  
            }
            result.close();

        }catch(Exception e){
            JOptionPane.showMessageDialog(null, e.getMessage());
            e.printStackTrace();
        }
        try{
            if(s != null){
                s.close();
                connect.close();
            }
        }catch(SQLException e){
            e.getMessage();
        }
    }//GEN-LAST:event_searchActionPerformed

    private void orderqtyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_orderqtyActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_orderqtyActionPerformed

    private void orderaddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_orderaddActionPerformed
        DefaultTableModel model = (DefaultTableModel)tb_order.getModel();
        DecimalFormat dformat =new DecimalFormat("#,###.00");
        double money = Double.valueOf(orderprice.getText())*Double.valueOf(orderqty.getText());
        double totalvat = (Double.valueOf(money)*0.07)+Double.valueOf(money);
        int vat = 7;
        Vector vec = new Vector();
//        if(orderqty.getText().isEmpty()){
//            JOptionPane.showMessageDialog(this, "Please Enter!", "ERROR", JOptionPane.ERROR_MESSAGE);
//        }else{
//        vec.add(orderid.getText());
//        vec.add(ordercolor.getText());
//        vec.add(orderprice.getText());
//        vec.add(orderqty.getText());
//        int vat = 7;
//        double money = Double.valueOf(orderprice.getText())*Double.valueOf(orderqty.getText());
//        vec.add(money);
//        total2+=money;
//        vec.add(vat+"%");
//        double totalvat = (Double.valueOf(money)*0.07)+Double.valueOf(money);
//        vec.add(dformat.format(totalvat));
//        total+=totalvat;
//        ordertotal.setText(""+dformat.format(total2)+"");
//        ordervat.setText("7%");
//        ordertotalvat.setText(""+dformat.format(total)+"");
//        model.addRow(vec);
//        }
        Connection connect =null;
        Statement s =null;
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            connect = DriverManager.getConnection("jdbc:sqlserver://localhost;databaseName=RumRuay_Beauty;user=sa;password=19082012");
            s = connect.createStatement();
            String sql = "INSERT INTO Recipt(OrdersID,ProductID,Color,Price,Qty,Total,Vat,TotalVat)"
                    + "VALUES ('"+lb_order.getText()+"','"
                    +orderid.getText()+"','"
                    +ordercolor.getText()+"','"
                    +orderprice.getText()+"','"
                    +orderqty.getText()+"','"
                    +money+"','"
                    +"7%"+"','"
                    +totalvat+"')";
             s.execute(sql);
            if(orderqty.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "Please Enter.", "ERROR", JOptionPane.ERROR_MESSAGE);
        }else{
            JOptionPane.showMessageDialog(this, "Successfully.");
            }
            s.close();

        }catch(Exception e){
            JOptionPane.showMessageDialog(null, e.getMessage());
            e.printStackTrace();
        }
        try{
            if(s != null){
                s.close();
                connect.close();
            }
        }catch(SQLException e){
            e.getMessage();
        } 
        
        vec.add(orderid.getText());
        vec.add(ordercolor.getText());
        vec.add(orderprice.getText());
        vec.add(orderqty.getText());
        
//        double money = Double.valueOf(orderprice.getText())*Double.valueOf(orderqty.getText());
        vec.add(money);
        total2+=money;
        vec.add(vat+"%");
//        double totalvat = (Double.valueOf(money)*0.07)+Double.valueOf(money);
        vec.add(dformat.format(totalvat));
        total+=totalvat;
        ordertotal.setText(""+dformat.format(total2)+"");
        ordervat.setText("7%");
        ordertotalvat.setText(""+dformat.format(total)+"");
//        model.addRow(vec);
        model.addRow(vec);
    }//GEN-LAST:event_orderaddActionPerformed

    private void ordereditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ordereditActionPerformed
//        DefaultTableModel model = (DefaultTableModel)tb_order.getModel();
        DecimalFormat dformat =new DecimalFormat("#,###.00");
//        int select = tb_order.getSelectedRow();
//        int vat = 7;
//        double before = Double.valueOf(tb_order.getValueAt(select, 2).toString())*Double.valueOf(tb_order.getValueAt(select,3).toString());
//        double beforevat = (Double.valueOf(tb_order.getValueAt(select,4).toString())*0.07)+Double.valueOf(tb_order.getValueAt(select,4).toString());
////        tb_order.setValueAt(orderqty.getText(),select,3);
//        model.setValueAt(orderqty.getText().toString(),select , 3);
////        int amount = Integer.valueOf(orderqty.getText());
//        
//        double totaledit=Double.valueOf(tb_order.getValueAt(select, 3).toString() )*Double.valueOf(tb_order.getValueAt(select,2).toString());
//        double totaleditvat=(totaledit*0.07)+totaledit;
////        tb_order.setValueAt(dformat.format(totaledit).toString(), row, 4);
////        tb_order.setValueAt(dformat.format(totaleditvat).toString(),row,6);
//        model.setValueAt(dformat.format(totaledit).toString(), select, 4);
//        model.setValueAt(dformat.format(totaleditvat).toString(), select, 6);
//        
//        total2=total2-before+totaledit;
//        ordertotal.setText(dformat.format(total2)+"");
//        
//        
//        total=total-beforevat+totaleditvat;
//        ordertotalvat.setText(""+dformat.format(total)+"");
//        model.setValueAt(orderqty.getText().toString(), select, 3);
//
////        model.setRowCount(select);
//        
////        model.setRowCount(row);
//        model.getRowCount();
        DefaultTableModel model = (DefaultTableModel)tb_order.getModel();
        Vector vec = new Vector();        
        int index = tb_order.getSelectedRow();
        int row=tb_order.getSelectedColumn();
        double before = Double.valueOf(orderprice.getText().toString())*Double.valueOf(orderqty.getText().toString());
        double beforevat = (before*0.07)+before;
        double totaledit=Double.valueOf(tb_order.getValueAt(index, 3).toString())*Double.valueOf(tb_order.getValueAt(index,2).toString());
        double totaleditvat=(totaledit*0.07)+totaledit;

        Connection connect =null;
        Statement s =null;
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            connect = DriverManager.getConnection("jdbc:sqlserver://localhost;databaseName=RumRuay_Beauty;user=sa;password=19082012");
            s = connect.createStatement();
            

            String sql = "UPDATE Recipt SET ProductID = '"+orderid.getText()+"' "+
                    ",Color = '"+ordercolor.getText()+"' "+
                    ",Price = '"+orderprice.getText()+"' "+ 
                    ",Qty = '"+orderqty.getText()+"' "+
                    ",Total = '"+before+"' "+
                    ",Vat = '7%'"+
                    ",TotalVat = '"+beforevat+"' "+
                   " WHERE OrdersID = '"+lb_order.getText()+"' ";
                    s.execute(sql);


                        JOptionPane.showMessageDialog(this, "Successfully.");


//           model.setValueAt(lb_order.getText().toString(),index , 0);
           model.setValueAt(orderid.getText().toString(), index, 0);
           model.setValueAt(ordercolor.getText().toString(), index, 1);
           model.setValueAt(orderprice.getText().toString(), index, 2);
           model.setValueAt(orderqty.getText().toString(), index, 3);
//           model.setValueAt(totaledit, index, 4);
           model.setValueAt("7%", index, 5);
//           model.setValueAt(totaleditvat, index, 6);
           model.setValueAt(dformat.format(before).toString(), index, 4);
        model.setValueAt(dformat.format(beforevat).toString(), index, 6);


        }catch(Exception e){
            JOptionPane.showMessageDialog(null, e.getMessage());
            e.printStackTrace();
        }
            try{
                 if(s != null){
                  s.close();
                  connect.close();
            }
            }catch (SQLException e){
                      System.out.println(e.getMessage());
                      e.printStackTrace();;
                      }


        total2=total2-totaledit+before;
        ordertotal.setText(dformat.format(total2)+"");
        total=total-totaleditvat+beforevat;
        ordertotalvat.setText(""+dformat.format(total)+"");
                model.getRowCount();

//        model.setValueAt(orderqty.getText().toString(), select, 3);
    }//GEN-LAST:event_ordereditActionPerformed

    private void tb_orderMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tb_orderMouseClicked
        DefaultTableModel model = (DefaultTableModel) tb_order.getModel();
        ordercolor.setText(model.getValueAt(tb_order.getSelectedRow(),1).toString());
        orderprice.setText(model.getValueAt(tb_order.getSelectedRow(),2).toString());
        orderqty.setText(model.getValueAt(tb_order.getSelectedRow(),3).toString());


    }//GEN-LAST:event_tb_orderMouseClicked

    private void searchcusidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchcusidActionPerformed

        String id = cus_id.getText().toString();
        Connection connect =null;
        Statement s =null;
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            connect = DriverManager.getConnection("jdbc:sqlserver://localhost;databaseName=RumRuay_Beauty;user=sa;password=19082012");
            s = connect.createStatement();
            String sql ="SELECT CustomerID,CustomerName FROM Customer "
                    + "WHERE CustomerID = '"+id+"'";
            ResultSet result = s.executeQuery(sql);
            int row = 0;
            while((result.next()))
            {
                String cusidn = result.getString("CustomerID");
                String cusname = result.getString("CustomerName");
                 labelid.setText("Hello "+cusname.toString()+" :) ");  
            }
            result.close();

        }catch(Exception e){
            JOptionPane.showMessageDialog(null, e.getMessage());
            e.printStackTrace();
        }
        try{
            if(s != null){
                s.close();
                connect.close();
            }
        }catch(SQLException e){
            e.getMessage();
        }        
        
    }//GEN-LAST:event_searchcusidActionPerformed

    private void lb_orderAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_lb_orderAncestorAdded
        int numberLandom;
            for (int i = 0; i < 1; i++) 
            {
                numberLandom = (int)(Math.random()*(1000));
                lb_order.setText("6050000"+numberLandom);
            }

//      lb_order.setText(sum+"");
    }//GEN-LAST:event_lb_orderAncestorAdded

    private void finishActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_finishActionPerformed
        DefaultTableModel model = (DefaultTableModel) tb_order.getModel();
        Vector vec = new Vector();
        Connection connect =null;
        Statement s =null;
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            connect = DriverManager.getConnection("jdbc:sqlserver://localhost;databaseName=RumRuay_Beauty;user=sa;password=19082012");
            s = connect.createStatement();
            

            String sql = "INSERT INTO Orders(OrdersID,CustomerID,Date,Total,Vat,TotalVat)"
                    + "VALUES ('"+lb_order.getText()+"','"
                    +cus_id.getText()+"','"
                    +datetime.getText()+"','"
                    +ordertotal.getText()+"','"
                    +ordervat.getText()+"','"
                    +ordertotalvat.getText()+"')";
            
                    s.execute(sql);

                JOptionPane.showMessageDialog(this, "Successfully.");


        }catch(Exception e){
            JOptionPane.showMessageDialog(null, e.getMessage());
            e.printStackTrace();
        }
            try{
                 if(s != null){
                  s.close();
                  connect.close();
            }
            }catch (SQLException e){
                      System.out.println(e.getMessage());
                      e.printStackTrace();;
                      }
            getContentPane().add(finish);
        Report form = new Report();
        form.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_finishActionPerformed

    private void orderdeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_orderdeleteActionPerformed

        DecimalFormat dformat =new DecimalFormat("#,###.00");

        DefaultTableModel model = (DefaultTableModel)tb_order.getModel();
        int index = tb_order.getSelectedRow();
        String id = tb_order.getValueAt(index, 0).toString();
//        Vector vec = new Vector();
        Connection connect =null;
        Statement s =null;
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            connect = DriverManager.getConnection("jdbc:sqlserver://localhost;databaseName=RumRuay_Beauty;user=sa;password=19082012");
            s = connect.createStatement();

            String sql = "DELETE FROM Recipt WHERE ProductID = '"+id+"'";
            s.execute (sql);
        

        }catch(Exception e){
            JOptionPane.showMessageDialog(null, e.getMessage());
            e.printStackTrace();
        }
            try{
                 if(s != null){
                  s.close();
                  connect.close();
            }
            }catch (SQLException e){
                      System.out.println(e.getMessage());
                      e.printStackTrace();
                      }
                    if(index < 0){
            JOptionPane.showMessageDialog(null, "Please select record for Delete.");
        }else{           
            Object[] options = {"Yes","No"};
            int n = JOptionPane.showOptionDialog(null, 
                    "Do you want to Delete data?",
                    "Confirm to Delete?",
                    JOptionPane.YES_NO_CANCEL_OPTION,
                    JOptionPane.QUESTION_MESSAGE,null,options,
                    options[1]);

            if(n == 0){
                
                     JOptionPane.showMessageDialog(null, "Delete Data Successfully");
                     model.removeRow(index);
        }
                    int vat = 7;
        double before = Double.valueOf(tb_order.getValueAt(select, 2).toString())*Double.valueOf(tb_order.getValueAt(select,3).toString());
        double beforevat = (Double.valueOf(tb_order.getValueAt(select,4).toString())*0.07)+Double.valueOf(tb_order.getValueAt(select,4).toString());
//        tb_order.setValueAt(orderqty.getText(),select,3);
        model.setValueAt(orderqty.getText().toString(), select, 3);
//        int amount = Integer.valueOf(orderqty.getText());
        
        double totaledit=Double.valueOf(tb_order.getValueAt(select, 3).toString() )*Double.valueOf(tb_order.getValueAt(select,2).toString());
        double totaleditvat=(totaledit*0.07)+totaledit;
//        tb_order.setValueAt(dformat.format(totaledit).toString(), select, 4);
//        tb_order.setValueAt(dformat.format(totaleditvat).toString(),select,6);
        model.setValueAt(dformat.format(totaledit).toString(),select, 4);
        model.setValueAt(dformat.format(totaleditvat).toString(),select,6);
        
        total2-=totaledit;
        ordertotal.setText(dformat.format(total2)+"");      
        total-=totaleditvat;
        ordertotalvat.setText(""+dformat.format(total)+"");
//        model.removeRow(select);
                };
    }//GEN-LAST:event_orderdeleteActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        orderid.setText("");
        ordercolor.setText("");
        orderprice.setText("");
        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void orderpaidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_orderpaidActionPerformed

        
    }//GEN-LAST:event_orderpaidActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        DecimalFormat dformat =new DecimalFormat("#,###.00");
//        double money = Double.valueOf(orderpaid.getText().toString());

//        double totalvat = Double.valueOf(ordertotalvat.getText().toString());
        double changes = Double.valueOf(orderpaid.getText().toString())-Double.valueOf(ordertotalvat.getText().toString());
        if(orderpaid.getText().toString().isEmpty()){
            JOptionPane.showMessageDialog(rootPane, "Please Enter.");
        }else{
            change.setText(changes+"");
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jMenu2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenu2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenu2ActionPerformed

    private void ChooseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ChooseActionPerformed
            Login form = new Login();
            form.setVisible(true);
            this.dispose();
    }//GEN-LAST:event_ChooseActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
            product form = new product();
            form.setVisible(true);
            this.dispose();
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
            Report form = new Report();
            form.setVisible(true);
            this.dispose();
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
            Product_Pay form = new Product_Pay();
            form.setVisible(true);
            this.dispose();
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
            Customer form = new Customer();
            form.setVisible(true);
            this.dispose();
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Orders.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Orders.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Orders.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Orders.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Orders().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem Choose;
    private javax.swing.JLabel change;
    private javax.swing.JTextField cus_id;
    private javax.swing.JLabel datetime;
    private javax.swing.JButton finish;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel labelid;
    private javax.swing.JLabel lb_order;
    private javax.swing.JButton orderadd;
    private javax.swing.JTextField ordercolor;
    private javax.swing.JButton orderdelete;
    private javax.swing.JButton orderedit;
    private javax.swing.JTextField orderid;
    private javax.swing.JTextField orderpaid;
    private javax.swing.JTextField orderprice;
    private javax.swing.JTextField orderqty;
    private javax.swing.JLabel ordertotal;
    private javax.swing.JLabel ordertotalvat;
    private javax.swing.JLabel ordervat;
    private javax.swing.JButton search;
    private javax.swing.JButton searchcusid;
    private javax.swing.JTable tb_order;
    // End of variables declaration//GEN-END:variables
}
