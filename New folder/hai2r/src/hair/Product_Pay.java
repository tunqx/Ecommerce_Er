/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package hair;

import java.awt.Color;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Vector;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author 555
 */
public class Product_Pay extends javax.swing.JFrame {

    /**
     * Creates new form Product_Pay
     */
    public Product_Pay() {
        initComponents();
        int index = 0;
       
        Vector Items = new Vector();      
        Connection connect =null;
        Statement s =null;
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            connect = DriverManager.getConnection("jdbc:sqlserver://localhost;databaseName=RumRuay_Beauty;user=sa;password=19082012");
            s = connect.createStatement();
            String sql ="SELECT TypeID,TypeName FROM ProductType ";
            
            ResultSet result = s.executeQuery(sql);
            int row = 0;
            while((result!=null)&&(result.next()))
            {
//                String id = result.getString("TypeID");
                protype.addItem(result.getString("TypeID"));
//                String name = result.getString("TypeName"); 
//                proname.setText(protype.getSelectedItem().toString());
            }
            result.close();

        }catch(Exception e){
            JOptionPane.showMessageDialog(null, e.getMessage());
            e.printStackTrace();
        }
        try{
            if(s != null){
                s.close();
                connect.close();
            }
        }catch(SQLException e){
            e.getMessage();
        }


    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        tb_product = new javax.swing.JTable();
        protype = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        proid = new javax.swing.JTextField();
        proname = new javax.swing.JTextField();
        procolor = new javax.swing.JTextField();
        proprice1 = new javax.swing.JTextField();
        proprice2 = new javax.swing.JTextField();
        jbsave = new javax.swing.JButton();
        tbedit = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        Product = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("ProductID");

        tb_product.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tb_product.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                tb_productAncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        tb_product.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tb_productMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tb_product);

        protype.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        protype.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "TypeID" }));
        protype.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                protypeMouseClicked(evt);
            }
        });
        protype.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                protypeActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("ProductID :");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("ProductName :");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("Color :");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("TypeID :");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setText("Price 1 :");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel6.setText("Price 2 :");

        proid.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        proname.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        procolor.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        proprice1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        proprice2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        proprice2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                proprice2ActionPerformed(evt);
            }
        });

        jbsave.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jbsave.setText("Save");
        jbsave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbsaveActionPerformed(evt);
            }
        });

        tbedit.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        tbedit.setText("Edit");
        tbedit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tbeditActionPerformed(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton1.setText("Back");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jMenuBar1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jMenu1.setText("File");

        jMenuItem1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jMenuItem1.setText("Login/Logout");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuItem3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jMenuItem3.setText("Customer");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem3);

        Product.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        Product.setText("Product");
        Product.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ProductActionPerformed(evt);
            }
        });
        jMenu1.add(Product);

        jMenuItem2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jMenuItem2.setText("Check Order");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuItem4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jMenuItem4.setText("บันทึกการขาย");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem4);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel6))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(proid)
                                    .addComponent(proname, javax.swing.GroupLayout.DEFAULT_SIZE, 105, Short.MAX_VALUE)
                                    .addComponent(procolor, javax.swing.GroupLayout.DEFAULT_SIZE, 105, Short.MAX_VALUE)
                                    .addComponent(proprice1, javax.swing.GroupLayout.DEFAULT_SIZE, 105, Short.MAX_VALUE)
                                    .addComponent(proprice2, javax.swing.GroupLayout.DEFAULT_SIZE, 105, Short.MAX_VALUE)
                                    .addComponent(protype, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jbsave)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(tbedit)))
                        .addGap(18, 18, 18))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButton1)
                        .addGap(50, 50, 50)))
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 384, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(32, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(53, 53, 53)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(proid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(proname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(procolor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(protype, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(proprice1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(proprice2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jbsave)
                            .addComponent(tbedit))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 268, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(35, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void protypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_protypeActionPerformed
        Connection connect =null;
        Statement s =null;
        ResultSet rs;
        String id1 = proname.getText().toString();
        try{
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            connect = DriverManager.getConnection("jdbc:sqlserver://localhost;databaseName=RumRuay_Beauty;user=sa;password=19082012");
            s = connect.createStatement();
            String sql ="SELECT TypeID,TypeName FROM ProductType WHERE TypeName = '"+id1+"'";
            
//            System.out.print(sql);
            ResultSet result =s.executeQuery(sql);
            int row=0;
            while((result!=null) && (result.next()))
            {
                protype.addItem(result.getString("TypeID"));
                proname.setText(id1);
//                model.setValueAt(result.getString("Color"), row, 2);
                row++;
            }
        result.close();

        }catch(Exception e){
            JOptionPane.showMessageDialog(null, e.getMessage());
            e.printStackTrace();
        }
        try{
            if(s != null){
                s.close();
                connect.close();
            }
        }catch(SQLException e){
            e.getMessage();
        
        }
    }//GEN-LAST:event_protypeActionPerformed

    private void tb_productAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_tb_productAncestorAdded
        DefaultTableModel model = (DefaultTableModel)tb_product.getModel();

//        Vector vec = new Vector();
        model.addColumn("ProductID");
        model.addColumn("ProductName");
        model.addColumn("Color");
        model.addColumn("TypeID");
        model.addColumn("Price1");
        model.addColumn("Price2");
        Connection connect =null;
        Statement s =null;
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            connect = DriverManager.getConnection("jdbc:sqlserver://localhost;databaseName=RumRuay_Beauty;user=sa;password=19082012");
            s = connect.createStatement();
            String sql ="SELECT * FROM Product";
            ResultSet result = s.executeQuery(sql);
            int row=0;
            while((result!=null) && (result.next()))
            {
                model.addRow(new Object[0]);
                model.setValueAt(result.getString("ProductID"), row, 0);
                model.setValueAt(result.getString("ProductName"), row, 1);
                model.setValueAt(result.getString("Color"), row, 2);
                model.setValueAt(result.getString("TypeID"), row, 3);
                model.setValueAt(result.getString("Price1"), row, 4);
                model.setValueAt(result.getString("Price2"), row, 5);
                row++;
            }
            result.close();
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, e.getMessage());
            e.printStackTrace();
        }
        try{
            if(s != null){
            s.close();
            connect.close();
        }
        }catch(SQLException e){
            e.printStackTrace();
}
    }//GEN-LAST:event_tb_productAncestorAdded

    private void jbsaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbsaveActionPerformed
        DefaultTableModel model = (DefaultTableModel) tb_product.getModel();
                Vector vec = new Vector();
        Connection connect =null;
        Statement s =null;
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            connect = DriverManager.getConnection("jdbc:sqlserver://localhost;databaseName=RumRuay_Beauty;user=sa;password=19082012");
            s = connect.createStatement();
            

            String sql = "INSERT INTO Product(ProductID,ProductName,Color,TypeID,Price1,Price2)"+
                         "VALUES ('"+proid.getText()+"','"
                        +proname.getText()+"','"
                        +procolor.getText()+"','"
                        +protype.getSelectedItem()+"','"
                        +proprice1.getText()+"','"
                        +proprice2.getText()+"')";
                    s.execute(sql);

                JOptionPane.showMessageDialog(this, "Successfully.");


        }catch(Exception e){
            JOptionPane.showMessageDialog(null, e.getMessage());
            e.printStackTrace();
        }
            try{
                 if(s != null){
                  s.close();
                  connect.close();
            }
            }catch (SQLException e){
                      System.out.println(e.getMessage());
                      e.printStackTrace();;
                      }
            getContentPane().add(jbsave);
        vec.add(proid.getText());
        vec.add(proname.getText());
        vec.add(procolor.getText());
        vec.add(protype.getSelectedItem());
        vec.add(proprice1.getText());
        vec.add(proprice2.getText());
        model.addRow(vec);
    }//GEN-LAST:event_jbsaveActionPerformed

    private void tb_productMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tb_productMouseClicked
        DefaultTableModel model = (DefaultTableModel)tb_product.getModel();
        proid.setText(model.getValueAt(tb_product.getSelectedRow(),0).toString());
        proname.setText(model.getValueAt(tb_product.getSelectedRow(),1).toString());
        procolor.setText(model.getValueAt(tb_product.getSelectedRow(),2).toString()); 
        protype.setSelectedItem(model.getValueAt(tb_product.getSelectedRow(),3).toString());   
        proprice1.setText(model.getValueAt(tb_product.getSelectedRow(),4).toString()); 
        proprice2.setText(model.getValueAt(tb_product.getSelectedRow(),5).toString()); 
    }//GEN-LAST:event_tb_productMouseClicked

    private void tbeditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tbeditActionPerformed
        DefaultTableModel model = (DefaultTableModel)tb_product.getModel();
//        Vector vec = new Vector();
        int index = tb_product.getSelectedRow();
//        int row=tb_product.getSelectedColumn();
        Connection connect =null;
        Statement s =null;
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            connect = DriverManager.getConnection("jdbc:sqlserver://localhost;databaseName=RumRuay_Beauty;user=sa;password=19082012");
            s = connect.createStatement();
            

            String sql = "UPDATE Product SET ProductName = '"
                     +proname.getText()+"',"+
                     "color = '"+procolor.getText()+"',"+
                     "TypeID = '"+protype.getSelectedItem()+"',"+
                     "Price1 = '"+proprice1.getText()+"',"+
                     "Price2 = '"+proprice2.getText()+"'"+
                    "WHERE ProductID = '"+proid.getText()+"'";
            
           s.execute(sql);
                    
           JOptionPane.showMessageDialog(null, "Successfully.");

//           model.setValueAt(proid.getText(), index, 0);
                        
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, e.getMessage());
            e.printStackTrace();
        }
            try{
                 if(s != null){
                  s.close();
                  connect.close();
            }
            }catch (SQLException e){
                      System.out.println(e.getMessage());
                      e.printStackTrace();;
                      }
//            getContentPane().add(tbedit);
           model.setValueAt(proname.getText(),index , 1);
           model.setValueAt(procolor.getText(), index, 2);
           model.setValueAt(protype.getSelectedItem(), index, 3);
           model.setValueAt(proprice1.getText(), index, 4);
           model.setValueAt(proprice2.getText(), index, 5);
    }//GEN-LAST:event_tbeditActionPerformed

    private void protypeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_protypeMouseClicked

    }//GEN-LAST:event_protypeMouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        Choose form = new Choose();
        form.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void proprice2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_proprice2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_proprice2ActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
            Login form = new Login();
            form.setVisible(true);
            this.dispose();
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void ProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ProductActionPerformed
            product form = new product();
            form.setVisible(true);
            this.dispose();
    }//GEN-LAST:event_ProductActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
            Customer form = new Customer();
            form.setVisible(true);
            this.dispose();
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
            Orders form = new Orders();
            form.setVisible(true);
            this.dispose();
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
            Report form = new Report();
            form.setVisible(true);
            this.dispose();
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Product_Pay.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Product_Pay.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Product_Pay.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Product_Pay.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Product_Pay().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem Product;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton jbsave;
    private javax.swing.JTextField procolor;
    private javax.swing.JTextField proid;
    private javax.swing.JTextField proname;
    private javax.swing.JTextField proprice1;
    private javax.swing.JTextField proprice2;
    private javax.swing.JComboBox<String> protype;
    private javax.swing.JTable tb_product;
    private javax.swing.JButton tbedit;
    // End of variables declaration//GEN-END:variables
}